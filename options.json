{"jovian.decky-loader.enable": {"declarations": [{"name": "modules/decky-loader.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/decky-loader.nix"}], "default": {"_type": "literalExpression", "text": "false"}, "description": "Whether to enable the Steam Deck Plugin Loader.\n", "loc": ["jovian", "decky-loader", "enable"], "readOnly": false, "type": "boolean"}, "jovian.decky-loader.extraPackages": {"declarations": [{"name": "modules/decky-loader.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/decky-loader.nix"}], "default": {"_type": "literalExpression", "text": "[ ]"}, "description": "Extra packages to add to the service PATH.\n", "example": {"_type": "literalExpression", "text": "[ pkgs.curl pkgs.unzip ]"}, "loc": ["jovian", "decky-loader", "extraPackages"], "readOnly": false, "type": "list of package"}, "jovian.decky-loader.extraPythonPackages": {"declarations": [{"name": "modules/decky-loader.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/decky-loader.nix"}], "default": {"_type": "literalExpression", "text": "pythonPackages: with pythonPackages; []"}, "description": "Extra Python packages to add to the PYTHONPATH of the loader.\n", "example": {"_type": "literalExpression", "text": "pythonPackages: with pythonPackages; [ hid ]"}, "loc": ["jovian", "decky-loader", "extraPythonPackages"], "readOnly": false, "type": "function that evaluates to a(n) list of package"}, "jovian.decky-loader.package": {"declarations": [{"name": "modules/decky-loader.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/decky-loader.nix"}], "default": {"_type": "literalExpression", "text": "pkgs.decky-loader"}, "description": "The loader package to use.\n", "loc": ["jovian", "decky-loader", "package"], "readOnly": false, "type": "package"}, "jovian.decky-loader.stateDir": {"declarations": [{"name": "modules/decky-loader.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/decky-loader.nix"}], "default": {"_type": "literalExpression", "text": "\"/var/lib/decky-loader\""}, "description": "Directory to store plugins and data.\n", "loc": ["jovian", "decky-loader", "stateDir"], "readOnly": false, "type": "path"}, "jovian.decky-loader.user": {"declarations": [{"name": "modules/decky-loader.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/decky-loader.nix"}], "default": {"_type": "literalExpression", "text": "\"decky\""}, "description": "The user Decky Loader should run plugins as.\n", "loc": ["jovian", "decky-loader", "user"], "readOnly": false, "type": "string"}, "jovian.devices.steamdeck.autoUpdate": {"declarations": [{"name": "modules/steamdeck/firmware.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/firmware.nix"}], "default": {"_type": "literalExpression", "text": "false"}, "description": "Whether to automatically update the BIOS and controller firmware.\n", "loc": ["jovian", "devices", "steamdeck", "autoUpdate"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enable": {"declarations": [{"name": "modules/steamdeck/default.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/default.nix"}], "default": {"_type": "literalExpression", "text": "false"}, "description": "Whether to enable Steam Deck-specific configurations.\n", "loc": ["jovian", "devices", "steamdeck", "enable"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableControllerUdevRules": {"declarations": [{"name": "modules/steamdeck/controller.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/controller.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Enables udev rules to make the controller controllable by users.\n\nWithout this, neither steam, nor any other userspace client can\nswitch the controller from out of its default \"lizard\" mode.\n", "loc": ["jovian", "devices", "steamdeck", "enableControllerUdevRules"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableDefaultCmdlineConfig": {"declarations": [{"name": "modules/steamdeck/hw-support.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/hw-support.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to enable stock kernel command line flags.\n", "loc": ["jovian", "devices", "steamdeck", "enableDefaultCmdlineConfig"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableDefaultStage1Modules": {"declarations": [{"name": "modules/steamdeck/hw-support.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/hw-support.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to enable essential kernel modules in initrd.\n", "loc": ["jovian", "devices", "steamdeck", "enableDefaultStage1Modules"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableDefaultSysctlConfig": {"declarations": [{"name": "modules/steamdeck/hw-support.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/hw-support.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to enable stock sysctl configs.\n", "loc": ["jovian", "devices", "steamdeck", "enableDefaultSysctlConfig"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableEarlyModesetting": {"declarations": [{"name": "modules/steamdeck/graphical.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/graphical.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to enable early kernel modesetting.\n", "loc": ["jovian", "devices", "steamdeck", "enableEarlyModesetting"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableFwupdBiosUpdates": {"declarations": [{"name": "modules/steamdeck/firmware.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/firmware.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to use fwupd to update the BIOS.\n", "loc": ["jovian", "devices", "steamdeck", "enableFwupdBiosUpdates"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableGyroDsuService": {"declarations": [{"name": "modules/steamdeck/sdgyrodsu.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/sdgyrodsu.nix"}], "default": {"_type": "literalExpression", "text": "false"}, "description": "Whether to enable the Cemuhook DSU service for the gyroscope.\n\nIf enabled, motion data from the gyroscope can be used in Cemu\nwith Cemuhook.\n", "loc": ["jovian", "devices", "steamdeck", "enableGyroDsuService"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableKernelPatches": {"declarations": [{"name": "modules/steamdeck/kernel.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/kernel.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to apply kernel patches if available.\n", "loc": ["jovian", "devices", "steamdeck", "enableKernelPatches"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableMesaPatches": {"declarations": [{"name": "modules/steamdeck/mesa.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/mesa.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to apply the Mesa patches if available.\n\nCurrently, they allow the swapchain interval to be changed by\nthe framerate limiter in gamescope.\n", "loc": ["jovian", "devices", "steamdeck", "enableMesaPatches"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableOsFanControl": {"declarations": [{"name": "modules/steamdeck/fan-control.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/fan-control.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to enable the OS-controlled fan curve.\n\nThis is enabled by default since SteamOS 3.2.\n", "loc": ["jovian", "devices", "steamdeck", "enableOsFanControl"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enablePerfControlUdevRules": {"declarations": [{"name": "modules/steamdeck/perf-control.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/perf-control.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to make performance-related device attributes controllable by users.\n\nThe Steam Deck Client directly modifies several device attributes to\ncontrol the display brightness and to enable performance tuning (TDP\nlimit, GPU clock control).\n", "loc": ["jovian", "devices", "steamdeck", "enablePerfControlUdevRules"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableProductSerialAccess": {"declarations": [{"name": "modules/steamdeck/hw-support.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/hw-support.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "> Loosen the product_serial node to `440 / root:wheel`, rather than `400 / root:root`\n> to allow the physical users to read S/N without auth.\n\u2014 holo-dmi-rules 1.0\n", "loc": ["jovian", "devices", "steamdeck", "enableProductSerialAccess"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableSoundSupport": {"declarations": [{"name": "modules/steamdeck/sound.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/sound.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to enable sound support.\n", "loc": ["jovian", "devices", "steamdeck", "enableSoundSupport"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableVendorRadv": {"declarations": [{"name": "modules/steamdeck/mesa.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/mesa.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to enable the vendor branch of Mesa RADV.\n", "loc": ["jovian", "devices", "steamdeck", "enableVendorRadv"], "readOnly": false, "type": "boolean"}, "jovian.devices.steamdeck.enableXorgRotation": {"declarations": [{"name": "modules/steamdeck/graphical.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steamdeck/graphical.nix"}], "default": {"_type": "literalExpression", "text": "config.jovian.devices.steamdeck.enable"}, "description": "Whether to rotate the display panel in X11.\n", "loc": ["jovian", "devices", "steamdeck", "enableXorgRotation"], "readOnly": false, "type": "boolean"}, "jovian.steam.autoStart": {"declarations": [{"name": "modules/steam/autostart.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steam/autostart.nix"}], "default": {"_type": "literalExpression", "text": "false"}, "description": "Whether to automatically launch the Steam Deck UI on boot.\n\nTraditional Display Managers cannot be enabled in conjunction with this option.\n", "loc": ["jovian", "steam", "autoStart"], "readOnly": false, "type": "boolean"}, "jovian.steam.desktopSession": {"declarations": [{"name": "modules/steam/autostart.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steam/autostart.nix"}], "default": {"_type": "literalExpression", "text": "null"}, "description": "The session to launch for Desktop Mode.\n\nBy default, attempting to switch to the desktop will launch\nGaming Mode again.\n", "example": {"_type": "literalExpression", "text": "\"plasma\""}, "loc": ["jovian", "steam", "desktopSession"], "readOnly": false, "type": "null or string"}, "jovian.steam.enable": {"declarations": [{"name": "modules/steam/default.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steam/default.nix"}], "default": {"_type": "literalExpression", "text": "false"}, "description": "Whether to enable the Steam Deck UI.\n\nWhen enabled, you can either use the `autoStart` option (preferred),\nlaunch the Steam Deck UI from your Display Manager or\nby running `start-gamescope-session`.\n", "loc": ["jovian", "steam", "enable"], "readOnly": false, "type": "boolean"}, "jovian.steam.user": {"declarations": [{"name": "modules/steam/autostart.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/steam/autostart.nix"}], "description": "The user to run Steam with.\n", "loc": ["jovian", "steam", "user"], "readOnly": false, "type": "string"}, "jovian.workarounds.ignoreMissingKernelModules": {"declarations": [{"name": "modules/workarounds.nix", "url": "https://github.com/Jovian-Experiments/Jovian-NixOS/blob/development/modules/workarounds.nix"}], "default": {"_type": "literalExpression", "text": "true"}, "description": "Whether to ignore missing kernel modules.\n", "loc": ["jovian", "workarounds", "ignoreMissingKernelModules"], "readOnly": false, "type": "boolean"}}